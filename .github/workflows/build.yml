# .github/workflows/build-android.yml
name: Build Android AppBundle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest  # Considera di usare ubuntu-latest per build più veloci, se possibile
    env:
      FLUTTER_VERSION: '3.27.1'
      JAVA_VERSION: '17'

    steps:
      # 1. Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configura Java 17 utilizzando l'azione setup-java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'  # Abilita la cache di Gradle

      # 3. Configura Flutter utilizzando l'azione aggiornata con caching
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true  # Abilita il caching di Flutter SDK e pub packages

      # 4. Disabilita le analitiche di Flutter (opzionale)
      - name: Disable Flutter Analytics
        run: flutter config --no-analytics

      # 5. Recupera le dipendenze di Flutter con caching
      - name: Install dependencies
        run: flutter pub get

      # 6. Precompila i plugin per ridurre i tempi di build (corretto con flag)
      - name: Precompile plugins
        run: flutter pub run build_runner build --release --delete-conflicting-outputs

      # 7. Costruisci l'Android App Bundle (.aab) in modalità release
      - name: Build Android App Bundle
        run: flutter build appbundle --release

      # 8. Carica l'App Bundle (.aab) come artifact
      - name: Upload Android AAB
        uses: actions/upload-artifact@v4
        with:
          name: myapp-aab
          path: build/app/outputs/bundle/release/*.aab
